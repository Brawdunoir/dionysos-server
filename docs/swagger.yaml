definitions:
  models.Room:
    properties:
      name:
        example: BirthdayParty
        type: string
    required:
    - name
    type: object
  models.User:
    properties:
      name:
        example: Diablox9
        type: string
    required:
    - name
    type: object
  utils.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  utils.UriResponse:
    properties:
      uri:
        example: /api/v0/users/1
        type: string
    type: object
info:
  contact:
    name: API Support
    url: https://github.com/Brawdunoir/dionysos-server/issues
  description: API instance for dionysos client application.
  license:
    name: GNU General Public License v3.0
    url: https://www.gnu.org/licenses/gpl-3.0.html
  title: Dionysos
  version: 0.1.0
paths:
  /rooms/:
    post:
      consumes:
      - application/json
      parameters:
      - description: Room object
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/models.Room'
      produces:
      - application/json
      responses:
        "201":
          description: Room created
          schema:
            $ref: '#/definitions/utils.UriResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Creates a room
      tags:
      - Rooms
  /rooms/:id:
    delete:
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ""
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Room not found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Deletes a room
      tags:
      - Rooms
    get:
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Room'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Room not found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Gets a room
      tags:
      - Rooms
    patch:
      consumes:
      - application/json
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      - description: Room object
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/models.Room'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Room'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Room not found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Updates a room
      tags:
      - Rooms
  /users/:
    post:
      consumes:
      - application/json
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            $ref: '#/definitions/utils.UriResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Creates a user
      tags:
      - Users
  /users/:id:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ""
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Deletes a user
      tags:
      - Users
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Gets a user
      tags:
      - Users
    patch:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Updates a user
      tags:
      - Users
  /version/:
    get:
      produces:
      - text/plain
      responses:
        "200":
          description: Version as x.x.x
          schema:
            type: string
        "500":
          description: Version has not been set correctly in server side
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get the api version
      tags:
      - Misc
swagger: "2.0"
